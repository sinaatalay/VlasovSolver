[build-system]
requires = ["hatchling==1.27.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["vlasovsolver"]

[tool.hatch.version]
path = "vlasovsolver/__init__.py"

[project]
name = 'vlasovsolver'
description = 'A Python package to solve Vlasov equation'
authors = [{ name = 'Michael Updike', email = 'mupdike@pppl.gov' }, { name = 'Sina Atalay', email = 'dev@atalay.biz' }]
readme = "README.md"
requires-python = '>=3.12'
dependencies = [
    'pydantic',
    'matplotlib',
    'numpy',
    'sympy',
    'scipy',
    'jax',
]
classifiers = ["Intended Audience :: Science/Research"]
dynamic = ["version"]

[tool.hatch.envs.default]
installer = "uv"
python = "3.13"
dependencies = ["ruff", "black", "ipython", "pyright", "pytest", "coverage"]
[tool.hatch.envs.default.scripts]
format = "black vlasovsolver tests run.py && ruff check --fix vlasovsolver tests run.py && ruff format vlasovsolver tests run.py" # hatch run format
lint = "ruff check"                                                                                                               # hatch run lint
check-types = "pyright vlasovsolver tests run.py"                                                                                 # hatch run check-types
test = "pytest"                                                                                                                   # hatch run test
test-and-report = "coverage run -m pytest && coverage combine && coverage report && coverage html --show-contexts"                # hatch run test-and-report

[tool.ruff]
line-length = 88

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
]
ignore = [
    "ISC001", # Conflicts with formatter
    "PGH003", # Not useful for Pyright
]
flake8-unused-arguments.ignore-variadic-names = true

[tool.black]
line-length = 88 # maximum line length
preview = true # to allow enable-unstable-feature
enable-unstable-feature = [
    "string_processing",
] # to break strings into multiple lines

[tool.pyright]
reportIncompatibleVariableOverride = false
reportIncompatibleMethodOverride = false

[tool.coverage.run]
source = ['vlasovsolver']
relative_files = true
exclude_lines = ["if __name__ == .__main__.:"]

[tool.pytest.ini_options]
addopts = [
    "-ra",              # Show extra test summary info for all tests
    "-v",               # Increase verbosity
    "--strict-markers", # Don't allow unknown markers
    "--strict-config",  # Always fail if there are unknown configuration options
]
testpaths = ["tests"]
